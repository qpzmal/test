<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.advu.workflow.dao.fcf_vu.SysUserRoleMapper">
  <resultMap id="BaseResultMap" type="cn.advu.workflow.domain.fcf_vu.SysUserRole">
    <id column="admins" jdbcType="INTEGER" property="admins" />
    <id column="roles" jdbcType="INTEGER" property="roles" />
  </resultMap>
  <sql id="Base_Column_List">
    id, admins, roles, create_time, update_time
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="cn.advu.workflow.domain.fcf_vu.SysUserRole">
    delete from sys_user_role
    where admins = #{admins,jdbcType=INTEGER}
      and roles = #{roles,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.advu.workflow.domain.fcf_vu.SysUserRole">
    insert into sys_user_role (admins, roles)
    values (#{admins,jdbcType=INTEGER}, #{roles,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.advu.workflow.domain.fcf_vu.SysUserRole">
    insert into sys_user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="admins != null">
        admins,
      </if>
      <if test="roles != null">
        roles,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="admins != null">
        #{admins,jdbcType=INTEGER},
      </if>
      <if test="roles != null">
        #{roles,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <!-- 以上为自动生成SQL，以下为自定义SQL -->
  <select id="queryAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_user_role
  </select>
  <select id="queryByUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_user_role
    where admins = ${userId}
  </select>
  <select id="queryByRole" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_user_role
    where roles = ${roleId}
  </select>
  <delete id="deleteByUser">
    delete from sys_user_role
    where admins = ${userId}
  </delete>
  <delete id="deleteByRole">
    delete from sys_user_role
    where roles = ${roleId}
  </delete>
  <delete id="deleteByIds">
    delete from sys_user_role
    where id in
    <foreach close=")" collection="userRoleIds" item="userRoleId" open="(" separator=",">
      ${userRoleId}
    </foreach>
  </delete>
</mapper>