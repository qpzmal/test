<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.advu.workflow.dao.fcf_vu.BaseExecuteOrderMapper">
  <resultMap id="BaseResultMap" type="cn.advu.workflow.domain.fcf_vu.BaseExecuteOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="process_instance_id" jdbcType="VARCHAR" property="processInstanceId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="order_num" jdbcType="VARCHAR" property="orderNum" />
    <result column="sec_order_num" jdbcType="VARCHAR" property="secOrderNum" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="order_date" jdbcType="TIMESTAMP" property="orderDate" />
    <result column="delivery_area_ids" jdbcType="VARCHAR" property="deliveryAreaIds" />
    <result column="delivery_area_names" jdbcType="VARCHAR" property="deliveryAreaNames" />
    <result column="area_id" jdbcType="INTEGER" property="areaId" />
    <result column="sign_type" jdbcType="TINYINT" property="signType" />
    <result column="custom_sign_id" jdbcType="INTEGER" property="customSignId" />
    <result column="custom_sign_name" jdbcType="VARCHAR" property="customSignName" />
    <result column="custom_adverser_id" jdbcType="INTEGER" property="customAdverserId" />
    <result column="industry_id" jdbcType="INTEGER" property="industryId" />
    <result column="person_sales_id" jdbcType="INTEGER" property="personSalesId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="public_rebate" jdbcType="DECIMAL" property="publicRebate" />
    <result column="private_rebate" jdbcType="DECIMAL" property="privateRebate" />
    <result column="tax_amount" jdbcType="DECIMAL" property="taxAmount" />
    <result column="tax_free_amount" jdbcType="DECIMAL" property="taxFreeAmount" />
    <result column="monitor_ids" jdbcType="VARCHAR" property="monitorIds" />
    <result column="monitor_names" jdbcType="VARCHAR" property="monitorNames" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
    <result column="person_leader_id" jdbcType="INTEGER" property="personLeaderId" />
    <result column="our_monitor_name" jdbcType="VARCHAR" property="ourMonitorName" />
    <result column="report_type_id" jdbcType="VARCHAR" property="reportTypeId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="signing_intention" jdbcType="VARCHAR" property="signingIntention" />
    <result column="person_payee_id" jdbcType="VARCHAR" property="personPayeeId" />
    <result column="pay_percent" jdbcType="DECIMAL" property="payPercent" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="account_period" jdbcType="INTEGER" property="accountPeriod" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
    <result column="item_status" jdbcType="TINYINT" property="itemStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="frame_id" jdbcType="INTEGER" property="frameId" />
    <result column="contract_status" jdbcType="TINYINT" property="contractStatus" />
    <result column="contract_img_status" jdbcType="TINYINT" property="contractImgStatus" />
    <result column="original_contract_status" jdbcType="TINYINT" property="originalContractStatus" />
    <result column="execute_order_img_status" jdbcType="TINYINT" property="executeOrderImgStatus" />
    <result column="original_execute_order_status" jdbcType="TINYINT" property="originalExecuteOrderStatus" />
    <result column="confirm_cost_status" jdbcType="TINYINT" property="confirmCostStatus" />
    <result column="reminder_payment_status" jdbcType="TINYINT" property="reminderPaymentStatus" />
    <result column="contractImgCount" jdbcType="INTEGER" property="contractImgCount" />
    <result column="executeOrderImgCount" jdbcType="INTEGER" property="executeOrderImgCount" />
  </resultMap>

  <resultMap id="ReportResultMap" type="cn.advu.workflow.domain.fcf_vu.datareport.BaseExecuteOrderReportVO" extends="BaseResultMap">
    <result column="ad_type_name" jdbcType="VARCHAR" property="adTypeName" />
    <result column="person_leader_name" jdbcType="VARCHAR" property="personLeaderName" />
    <result column="total_cpm_count" jdbcType="DECIMAL" property="totalCpmCount" />
    <result column="total_cpm_cost" jdbcType="DECIMAL" property="totalCpmCost" />
  </resultMap>

  <sql id="Base_Column_List">
    base_execute_order.id,
    base_execute_order.process_instance_id,
    base_execute_order.name,
    base_execute_order.order_num,
    base_execute_order.sec_order_num,
    base_execute_order.type,
    base_execute_order.order_date,
    base_execute_order.delivery_area_ids,
    base_execute_order.delivery_area_names,
    base_execute_order.area_id,
    base_execute_order.custom_sign_id,
    base_execute_order.custom_adverser_id,
    base_execute_order.industry_id,
    base_execute_order.person_sales_id,
    base_execute_order.amount,
    base_execute_order.public_rebate,
    base_execute_order.private_rebate,
    base_execute_order.tax_amount,
    base_execute_order.tax_free_amount,
    base_execute_order.monitor_ids,
    base_execute_order.monitor_names,
    base_execute_order.start_date,
    base_execute_order.end_date,
    base_execute_order.person_leader_id,
    base_execute_order.our_monitor_name,
    base_execute_order.report_type_id,
    base_execute_order.status,
    base_execute_order.signing_intention,
    base_execute_order.person_payee_id,
    base_execute_order.pay_percent,
    base_execute_order.user_id,
    base_execute_order.account_period,
    base_execute_order.del_flag,
    base_execute_order.item_status,
    base_execute_order.create_time,
    base_execute_order.update_time,
    base_execute_order.remark,
    base_execute_order.frame_id,
    base_execute_order.sign_type,
    base_execute_order.contract_status,
    base_execute_order.contract_img_status,
    base_execute_order.original_contract_status,
    base_execute_order.execute_order_img_status,
    base_execute_order.original_execute_order_status,
    base_execute_order.confirm_cost_status,
    base_execute_order.reminder_payment_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from base_execute_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from base_execute_order
    where id = #{id,jdbcType=INTEGER} AND status=-1
  </delete>
  <insert id="insert" parameterType="cn.advu.workflow.domain.fcf_vu.BaseExecuteOrder"  keyColumn="id" keyProperty="id"  useGeneratedKeys="true">
    insert into base_execute_order (id, process_instance_id, name,
      order_num, sec_order_num, type, 
      order_date, delivery_area_ids, delivery_area_names, 
      area_id, custom_sign_id, custom_adverser_id, 
      industry_id, person_sales_id, amount, 
      public_rebate, private_rebate, tax_amount, 
      tax_free_amount, monitor_ids, monitor_names, 
      start_date, end_date, person_leader_id, 
      our_monitor_name, report_type_id, status, 
      signing_intention, person_payee_id, pay_percent, 
      user_id, account_period, del_flag, 
      item_status, create_time, update_time, 
      remark, frame_id,sign_type)
    values (#{id,jdbcType=INTEGER}, #{processInstanceId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{orderNum,jdbcType=VARCHAR}, #{secOrderNum,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, 
      #{orderDate,jdbcType=TIMESTAMP}, #{deliveryAreaIds,jdbcType=VARCHAR}, #{deliveryAreaNames,jdbcType=VARCHAR}, 
      #{areaId,jdbcType=INTEGER}, #{customSignId,jdbcType=INTEGER}, #{customAdverserId,jdbcType=INTEGER}, 
      #{industryId,jdbcType=INTEGER}, #{personSalesId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, 
      #{publicRebate,jdbcType=DECIMAL}, #{privateRebate,jdbcType=DECIMAL}, #{taxAmount,jdbcType=DECIMAL}, 
      #{taxFreeAmount,jdbcType=DECIMAL}, #{monitorIds,jdbcType=VARCHAR}, #{monitorNames,jdbcType=VARCHAR}, 
      #{startDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, #{personLeaderId,jdbcType=INTEGER}, 
      #{ourMonitorName,jdbcType=VARCHAR}, #{reportTypeId,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{signingIntention,jdbcType=VARCHAR}, #{personPayeeId,jdbcType=VARCHAR}, #{payPercent,jdbcType=DECIMAL},
      #{userId,jdbcType=INTEGER}, #{accountPeriod,jdbcType=INTEGER}, #{delFlag,jdbcType=TINYINT}, 
      #{itemStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR}, #{frameId,jdbcType=INTEGER}, #{signType,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.advu.workflow.domain.fcf_vu.BaseExecuteOrder"  keyColumn="id" keyProperty="id"  useGeneratedKeys="true">
    insert into base_execute_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="processInstanceId != null">
        process_instance_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="secOrderNum != null">
        sec_order_num,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="orderDate != null">
        order_date,
      </if>
      <if test="deliveryAreaIds != null">
        delivery_area_ids,
      </if>
      <if test="deliveryAreaNames != null">
        delivery_area_names,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="signType != null">
        sign_type,
      </if>
      <if test="customSignId != null">
        custom_sign_id,
      </if>
      <if test="customAdverserId != null">
        custom_adverser_id,
      </if>
      <if test="industryId != null">
        industry_id,
      </if>
      <if test="personSalesId != null">
        person_sales_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="publicRebate != null">
        public_rebate,
      </if>
      <if test="privateRebate != null">
        private_rebate,
      </if>
      <if test="taxAmount != null">
        tax_amount,
      </if>
      <if test="taxFreeAmount != null">
        tax_free_amount,
      </if>
      <if test="monitorIds != null">
        monitor_ids,
      </if>
      <if test="monitorNames != null">
        monitor_names,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="personLeaderId != null">
        person_leader_id,
      </if>
      <if test="ourMonitorName != null">
        our_monitor_name,
      </if>
      <if test="reportTypeId != null">
        report_type_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="signingIntention != null">
        signing_intention,
      </if>
      <if test="personPayeeId != null">
        person_payee_id,
      </if>
      <if test="payPercent != null">
        pay_percent,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="accountPeriod != null">
        account_period,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="itemStatus != null">
        item_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="frameId != null">
        frame_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="processInstanceId != null">
        #{processInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="secOrderNum != null">
        #{secOrderNum,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="orderDate != null">
        #{orderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryAreaIds != null">
        #{deliveryAreaIds,jdbcType=VARCHAR},
      </if>
      <if test="deliveryAreaNames != null">
        #{deliveryAreaNames,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="signType != null">
        #{signType,jdbcType=TINYINT},
      </if>
      <if test="customSignId != null">
        #{customSignId,jdbcType=INTEGER},
      </if>
      <if test="customAdverserId != null">
        #{customAdverserId,jdbcType=INTEGER},
      </if>
      <if test="industryId != null">
        #{industryId,jdbcType=INTEGER},
      </if>
      <if test="personSalesId != null">
        #{personSalesId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="publicRebate != null">
        #{publicRebate,jdbcType=DECIMAL},
      </if>
      <if test="privateRebate != null">
        #{privateRebate,jdbcType=DECIMAL},
      </if>
      <if test="taxAmount != null">
        #{taxAmount,jdbcType=DECIMAL},
      </if>
      <if test="taxFreeAmount != null">
        #{taxFreeAmount,jdbcType=DECIMAL},
      </if>
      <if test="monitorIds != null">
        #{monitorIds,jdbcType=VARCHAR},
      </if>
      <if test="monitorNames != null">
        #{monitorNames,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="personLeaderId != null">
        #{personLeaderId,jdbcType=INTEGER},
      </if>
      <if test="ourMonitorName != null">
        #{ourMonitorName,jdbcType=VARCHAR},
      </if>
      <if test="reportTypeId != null">
        #{reportTypeId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="signingIntention != null">
        #{signingIntention,jdbcType=VARCHAR},
      </if>
      <if test="personPayeeId != null">
        #{personPayeeId,jdbcType=VARCHAR},
      </if>
      <if test="payPercent != null">
        #{payPercent,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="accountPeriod != null">
        #{accountPeriod,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="itemStatus != null">
        #{itemStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="frameId != null">
        #{frameId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.advu.workflow.domain.fcf_vu.BaseExecuteOrder">
    update base_execute_order
    <set>
      <if test="processInstanceId != null">
        process_instance_id = #{processInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="secOrderNum != null">
        sec_order_num = #{secOrderNum,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="orderDate != null">
        order_date = #{orderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryAreaIds != null">
        delivery_area_ids = #{deliveryAreaIds,jdbcType=VARCHAR},
      </if>
      <if test="deliveryAreaNames != null">
        delivery_area_names = #{deliveryAreaNames,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="signType != null">
        sign_type = #{signType,jdbcType=TINYINT},
      </if>
      <if test="customSignId != null">
        custom_sign_id = #{customSignId,jdbcType=INTEGER},
      </if>
      <if test="customAdverserId != null">
        custom_adverser_id = #{customAdverserId,jdbcType=INTEGER},
      </if>
      <if test="industryId != null">
        industry_id = #{industryId,jdbcType=INTEGER},
      </if>
      <if test="personSalesId != null">
        person_sales_id = #{personSalesId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="publicRebate != null">
        public_rebate = #{publicRebate,jdbcType=DECIMAL},
      </if>
      <if test="privateRebate != null">
        private_rebate = #{privateRebate,jdbcType=DECIMAL},
      </if>
      <if test="taxAmount != null">
        tax_amount = #{taxAmount,jdbcType=DECIMAL},
      </if>
      <if test="taxFreeAmount != null">
        tax_free_amount = #{taxFreeAmount,jdbcType=DECIMAL},
      </if>
      <if test="monitorIds != null">
        monitor_ids = #{monitorIds,jdbcType=VARCHAR},
      </if>
      <if test="monitorNames != null">
        monitor_names = #{monitorNames,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="personLeaderId != null">
        person_leader_id = #{personLeaderId,jdbcType=INTEGER},
      </if>
      <if test="ourMonitorName != null">
        our_monitor_name = #{ourMonitorName,jdbcType=VARCHAR},
      </if>
      <if test="reportTypeId != null">
        report_type_id = #{reportTypeId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="signingIntention != null">
        signing_intention = #{signingIntention,jdbcType=VARCHAR},
      </if>
      <if test="personPayeeId != null">
        person_payee_id = #{personPayeeId,jdbcType=VARCHAR},
      </if>
      <if test="payPercent != null">
        pay_percent = #{payPercent,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="accountPeriod != null">
        account_period = #{accountPeriod,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="itemStatus != null">
        item_status = #{itemStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="frameId != null">
        frame_id = #{frameId,jdbcType=INTEGER},
      </if>
      <if test="contractStatus != null">
        contract_status = #{contractStatus,jdbcType=INTEGER},
      </if>
      <if test="contractImgStatus != null">
        contract_img_status = #{contractImgStatus,jdbcType=INTEGER},
      </if>
      <if test="originalContractStatus != null">
        original_contract_status = #{originalContractStatus,jdbcType=INTEGER},
      </if>
      <if test="executeOrderImgStatus != null">
        execute_order_img_status = #{executeOrderImgStatus,jdbcType=INTEGER},
      </if>
      <if test="originalExecuteOrderStatus != null">
        original_execute_order_status = #{originalExecuteOrderStatus,jdbcType=INTEGER},
      </if>
      <if test="confirmCostStatus != null">
        confirm_cost_status = #{confirmCostStatus,jdbcType=INTEGER},
      </if>
      <if test="reminderPaymentStatus != null">
        reminder_payment_status = #{reminderPaymentStatus,jdbcType=INTEGER},
      </if>

    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.advu.workflow.domain.fcf_vu.BaseExecuteOrder">
    update base_execute_order
    set
      name = #{name,jdbcType=VARCHAR},
      sec_order_num = #{secOrderNum,jdbcType=VARCHAR},
      order_date = #{orderDate,jdbcType=TIMESTAMP},
      delivery_area_ids = #{deliveryAreaIds,jdbcType=VARCHAR},
      delivery_area_names = #{deliveryAreaNames,jdbcType=VARCHAR},
      area_id = #{areaId,jdbcType=INTEGER},
      custom_sign_id = #{customSignId,jdbcType=INTEGER},
      custom_adverser_id = #{customAdverserId,jdbcType=INTEGER},
      industry_id = #{industryId,jdbcType=INTEGER},
      person_sales_id = #{personSalesId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      public_rebate = #{publicRebate,jdbcType=DECIMAL},
      private_rebate = #{privateRebate,jdbcType=DECIMAL},
      tax_amount = #{taxAmount,jdbcType=DECIMAL},
      tax_free_amount = #{taxFreeAmount,jdbcType=DECIMAL},
      monitor_ids = #{monitorIds,jdbcType=VARCHAR},
      monitor_names = #{monitorNames,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      person_leader_id = #{personLeaderId,jdbcType=INTEGER},
      our_monitor_name = #{ourMonitorName,jdbcType=VARCHAR},
      report_type_id = #{reportTypeId,jdbcType=VARCHAR},
      signing_intention = #{signingIntention,jdbcType=VARCHAR},
      person_payee_id = #{personPayeeId,jdbcType=VARCHAR},
      pay_percent = #{payPercent,jdbcType=DECIMAL},
      account_period = #{accountPeriod,jdbcType=INTEGER},
      item_status = 0,
      remark = #{remark,jdbcType=VARCHAR},
      frame_id = #{frameId,jdbcType=INTEGER},
      sign_type = #{signType,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>






  <!-- 以上为自动生成SQL，以下为自定义SQL -->
  <select id="queryAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from base_execute_order
    where del_flag = '0'
    <if test="itemStatus != null">
      and item_status = #{itemStatus,jdbcType=TINYINT}
    </if>
    <if test="status != null">
      and status = #{status,jdbcType=TINYINT}
    </if>
    <if test="payPercent != null">
      and pay_percent <![CDATA[ < ]]> #{payPercent,jdbcType=DECIMAL}
    </if>

    <!--<if test="contractStatus != null">-->
      <!--and contract_status = #{contractStatus,jdbcType=TINYINT}-->
    <!--</if>-->
    <!--<if test="contractImgStatus != null">-->
      <!--and contract_img_status = #{contractImgStatus,jdbcType=TINYINT}-->
    <!--</if>-->
    <!--<if test="originalContractStatus != null">-->
      <!--and original_contract_status = #{originalContractStatus,jdbcType=TINYINT}-->
    <!--</if>-->
    <!--<if test="executeOrderImgStatus != null">-->
      <!--and execute_order_img_status = #{executeOrderImgStatus,jdbcType=TINYINT}-->
    <!--</if>-->
    <!--<if test="originalExecuteOrderStatus != null">-->
      <!--and original_execute_order_status = #{originalExecuteOrderStatus,jdbcType=TINYINT}-->
    <!--</if>-->
    <!--<if test="reminderPaymentStatus != null">-->
      <!--and reminder_payment_status = #{reminderPaymentStatus,jdbcType=TINYINT}-->
    <!--</if>-->

    <if test="statusArray != null">
      and status IN ${statusArray}
    </if>
    order by update_time desc
    <if test="page != null">
      limit #{page.start}, #{page.pageSize}
    </if>
  </select>



  <select id="queryAllForContract" resultMap="BaseResultMap">
    select
    base_execute_order.id,
    base_execute_order.name,
    base_execute_order.order_num,
    base_execute_order.status,
    base_execute_order.contract_status,
    base_execute_order.contract_img_status,
    base_execute_order.original_contract_status,
    base_execute_order.execute_order_img_status,
    base_execute_order.original_execute_order_status,
    base_execute_order.confirm_cost_status,
    base_execute_order.reminder_payment_status,
    IFNULL(base_fileupload_1.countNum, 0) as contractImgCount,
    IFNULL(base_fileupload_2.countNum, 0) as executeOrderImgCount
    from base_execute_order left join
    (
    select biz_name, count(biz_name) as countNum from  base_fileupload  where biz_type = 1 group by biz_name
    ) base_fileupload_1 on  base_execute_order.order_num = base_fileupload_1.biz_name
    left join
    (
    select biz_name, count(biz_name) as countNum from  base_fileupload  where biz_type = 2 group by biz_name
    ) base_fileupload_2 on base_execute_order.order_num = base_fileupload_2.biz_name
    where del_flag = '0'
    <if test="itemStatus != null">
      and item_status = #{itemStatus,jdbcType=TINYINT}
    </if>
    <if test="status != null">
      and status = #{status,jdbcType=TINYINT}
    </if>
    <if test="payPercent != null">
      and pay_percent <![CDATA[ < ]]> #{payPercent,jdbcType=DECIMAL}
    </if>
    <if test="statusArray != null">
      and status IN ${statusArray}
    </if>
    <if test="conditionStartDate != null">
      AND create_time >= STR_TO_DATE(#{conditionStartDate,jdbcType=TIMESTAMP}, '%Y-%m-%d %H:%i:%s')
    </if>
    <if test="conditionEndDate != null and endDate != '' ">
      AND create_time <![CDATA[ <= ]]> STR_TO_DATE(#{conditionEndDate,jdbcType=TIMESTAMP}, '%Y-%m-%d %H:%i:%s')
    </if>
    order by update_time desc
    <if test="page != null">
      limit #{page.start}, #{page.pageSize}
    </if>
  </select>

  <select id="findAllUnFinished" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from base_execute_order
    where del_flag = '0'
    and status != '3'
    order by update_time desc
  </select>


  <!-- 以上为自动生成SQL，以下为自定义SQL -->
  <select id="queryFinalReport" resultType="HashMap">
    select
    base_execute_order.order_num as orderNum,
    base_execute_order.name as name,
    base_custom.name as customSignName,
    base_person.name as personLeaderName,
    base_execute_order.delivery_area_names as deliveryAreaNames,
    base_execute_order.start_date as startDate,
    base_execute_order.end_date as endDate,
    ifnull(base_execute_order.tax_amount,0) as amount,
    ifnull(base_execute_order.public_rebate, 0) as publicRebate,
    group_concat(DISTINCT base_adtype.name separator '、') as adTypeName,
    base_execute_order.update_time,
    count(base_order_cpm.id) as totalCpmCount,
    sum(IFNULL(first_price,0)*IFNULL(cpm,0)) as totalCpmCost
    <if test="mediaIdList != null ">
      ,
    </if>
    <foreach collection="mediaIdList" item="mediaId" separator="," >
      (select count(media_cpm_${mediaId}.cpm) from base_order_cpm media_cpm_${mediaId}  where media_cpm_${mediaId}.order_id = base_execute_order.id and media_cpm_${mediaId}.order_cpm_type = 2 and media_cpm_${mediaId}.media_id=${mediaId}) as s_${mediaId}
    </foreach>
    from base_execute_order left join base_order_cpm on  base_order_cpm.order_id = base_execute_order.id
    left join base_adtype on base_order_cpm.ad_type_id = base_adtype.id
    left join base_custom on base_execute_order.custom_sign_id = base_custom.id
    left join base_person on base_execute_order.person_leader_id = base_person.id
    where base_execute_order.del_flag = '0' and base_order_cpm.order_cpm_type IN (1,2)
    and base_execute_order.status = '2' and base_execute_order.end_date <![CDATA[ < current_date()]]>
    <if test="likeSearch != null">
      and (
        base_execute_order.name like CONCAT('%',#{likeSearch,jdbcType=VARCHAR},'%')
        or
        base_execute_order.order_num like CONCAT('%',#{likeSearch,jdbcType=VARCHAR},'%')
      )
    </if>
    group by base_execute_order.id
    order by base_execute_order.update_time desc
  </select>

  <select id="reminderPaymentList" resultType="HashMap">
    select
    base_execute_order.id as id,
    base_execute_order.order_num as orderNum,
    base_execute_order.name as name,
    base_custom.name as customSignName,
    base_person.name as personLeaderName,
    base_execute_order.delivery_area_names as deliveryAreaNames,
    base_execute_order.start_date as startDate,
    base_execute_order.end_date as endDate,
    group_concat(DISTINCT base_adtype.name separator '、') as adTypeName,
    case when base_execute_order.end_date <![CDATA[ < ]]> now() then 'stop' else 'playing' end AS playStatus,
    base_execute_order.tax_amount as taxAmount,
    date_add(base_execute_order.end_date, interval account_period day) as overdueDate,
    saleLeader.name as saleLeaderName,
    base_execute_order.pay_percent AS payPercent,
    case when base_execute_order.end_date <![CDATA[ < ]]>  date_add(now(), interval -account_period day) then 'true' else 'false' end AS overdueFlag
    from base_execute_order left join base_order_cpm on  base_order_cpm.order_id = base_execute_order.id
    left join base_adtype on base_order_cpm.ad_type_id = base_adtype.id
    left join base_custom on base_execute_order.custom_sign_id = base_custom.id
    left join base_person on base_execute_order.person_leader_id = base_person.id
    left join base_person AS saleLeader on base_execute_order.person_leader_id = saleLeader.id
    where base_execute_order.del_flag = '0' AND
    base_execute_order.status=2 and base_execute_order.pay_percent <![CDATA[ < ]]> 1 and
    (base_execute_order.end_date <![CDATA[ < ]]> date_add(now(), interval - account_period day)
    OR base_execute_order.end_date <![CDATA[ < ]]> date_add(now(), interval -account_period+${days} day)
    )
    <if test="bizId != null and bizId != '' ">
      AND base_execute_order.id = #{bizId,jdbcType=INTEGER}
    </if>
    group by base_execute_order.id
    order by overdueDate desc
  </select>
</mapper>