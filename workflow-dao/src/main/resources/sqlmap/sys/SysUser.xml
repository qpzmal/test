<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.advu.workflow.dao.database.SysUserMapper">

    <resultMap id="userResultMap" type="cn.advu.workflow.domain.database.SysUser">
        <id column="user_id"  property="userId"/>
        <result column="acct_id"   property="acctId"/>
        <result column="passwd"  property="passwd"/>
        <result column="real_name"  property="realName"/>
        <result column="email"  property="email"/>
        <result column="phone"  property="phone"/>
        <result column="user_status"  property="userStatus"/>
        <result column="creator_id"  property="creatorId"/>
        <result column="login_time"  property="loginTime"/>
        <result column="create_time"  property="createTime"/>
        <result column="update_time"  property="updateTime"/>
        <result column="last_login_time"  property="lastLoginTime"/>
        <result column="role_id"  property="roleId"/>
        <result column="channel"  property="channel"/>
    </resultMap>

    <insert id="add"
        useGeneratedKeys="true" keyProperty="user.userId" 
        parameterType="cn.advu.workflow.domain.database.SysUser">
		INSERT INTO sys_user (
		    acct_id,
		    passwd,
		    real_name,
		    email,
		    phone,
		    creator_id,
		    create_time
		)
		VALUES (
		    #{user.acctId},
		    #{user.passwd},
		    #{user.realName},
		    #{user.email},
		    #{user.phone},
		    #{user.creatorId},
		    NOW()
		)
    </insert>
    
    <select id="getValid" resultMap="userResultMap">
        SELECT * FROM sys_user WHERE user_status = 0
    </select>
    
    <insert id="setRole">
		INSERT INTO sys_user_role (
		    user_id,
		    role_id,
		    creator_id,
		    create_time
		)
		VALUES
		    (#{userId}, #{roleId}, #{creatorId}, NOW())            
    </insert>

	<insert id="insertAllotChannel" parameterType="cn.advu.workflow.domain.database.BusinessChannel">
		insert into channel_business_user set channel_id = #{channelId},user_id = #{userId},update_time = now(),update_user = #{updateUser}
	</insert>

	<select id="getById" resultMap="userResultMap">
 		SELECT u.*,ur.role_id FROM sys_user u  LEFT JOIN sys_user_role ur on u.user_id = ur.user_id  where  u.user_id = #{userId}
    </select>
    
    <update id="update" parameterType="cn.advu.workflow.domain.database.SysUser">
		UPDATE sys_user
		SET real_name = #{realName},
		 acct_id = #{acctId},
		 email = #{email},
		 phone = #{phone},
		 update_time = now()
		<if test="passwd != null and passwd != ''">
			,passwd = #{passwd}
		</if>
		WHERE user_id = #{userId}
    </update>

	<update id="updateRoleByUserId">
		update sys_user_role set role_id = #{roleId} where user_id = #{userId}
	</update>

	<update id="updateAllotChannel" parameterType="cn.advu.workflow.domain.database.BusinessChannel">
		update channel_business_user set  channel_id = #{channelId},update_time = now(),update_user = #{updateUser} where user_id = #{userId}
	</update>

	<select id="getByAcctAndPasswd" resultMap="userResultMap">
        SELECT * FROM sys_user WHERE acct_id = #{acctId} AND passwd = #{passwd}
    </select>

	<select id="getBusinessAll" resultMap="userResultMap">
		select a.*,b.channel_id AS channel from sys_user a
		LEFT JOIN channel_business_user b on a.user_id = b.user_id
		where a.user_id in
		(
			select user_id from sys_user_role where role_id = (select role_id from sys_role where role_name = 'H5商务')
		)
		AND user_status = 0
	</select>



	<select id="selectBusinessChannelCount" resultType="java.lang.Integer">
		select count(1) from channel_business_user where user_id = #{userId}
	</select>

	<select id="selectBusinessChannelByUserId" resultType="java.lang.String">
		select channel_id from channel_business_user where user_id = #{userId}
	</select>

</mapper>