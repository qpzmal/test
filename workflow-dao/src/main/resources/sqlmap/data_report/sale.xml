<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 销售报表 -->
<mapper namespace="cn.advu.workflow.dao.fcf_vu.datareport.VuDataReportMapper">

    <resultMap id="BaseResultMap" type="cn.advu.workflow.domain.fcf_vu.datareport.VuDataReport">
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="order_date" jdbcType="VARCHAR" property="orderDate" />
		<result column="start_date" jdbcType="VARCHAR" property="startDate" />
        <result column="order_num" jdbcType="VARCHAR" property="orderNum" />
        <result column="北京公司" jdbcType="VARCHAR" property="bj" />
        <result column="广东公司" jdbcType="VARCHAR" property="gd" />
        <result column="石家庄" jdbcType="VARCHAR" property="sjz" />
        
        <result column="户外" jdbcType="VARCHAR" property="hw" />
        <result column="智能电视" jdbcType="VARCHAR" property="ds" />
        <result column="应用" jdbcType="VARCHAR" property="yy" />
        <result column="内容商" jdbcType="VARCHAR" property="nr" />
        
        <result column="4A1" jdbcType="VARCHAR" property="a1" />
        <result column="4A2" jdbcType="VARCHAR" property="a2" />
        <result column="4A3" jdbcType="VARCHAR" property="a3" />
        <result column="4A4" jdbcType="VARCHAR" property="a4" />
        
        <result column="直客1" jdbcType="VARCHAR" property="z1" />
        <result column="直客2" jdbcType="VARCHAR" property="z2" />
        <result column="直客3" jdbcType="VARCHAR" property="z3" />
        <result column="直客4" jdbcType="VARCHAR" property="z4" />
        
        <result column="tax_amount" jdbcType="VARCHAR" property="taxAmount" />
        <result column="tax_free_amount" jdbcType="VARCHAR" property="taxFreeAmount" />

        <result column="cpm_total" jdbcType="VARCHAR" property="cpmTotal" />
        <result column="sale_amount" jdbcType="VARCHAR" property="saleAmount" />
        <result column="buy_amount" jdbcType="VARCHAR" property="buyAmount" />

        <result column="yswc" jdbcType="VARCHAR" property="yswc" />

        <result column="custom_id" jdbcType="VARCHAR" property="customId" />
        <result column="custom_type" jdbcType="VARCHAR" property="customType" />
        <result column="M_PAY" jdbcType="VARCHAR" property="mPay" />
        <result column="J_PAY" jdbcType="VARCHAR" property="jPay" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="pay_percent" jdbcType="VARCHAR" property="payPercent" />
    </resultMap>



    <!-- 1.	销售报表分析系统 -->
    <select id="querySaleHistoryByDate" resultMap="BaseResultMap">
        SELECT
        o.order_date AS order_date,COUNT(o.order_num) AS order_num,SUM(o.tax_amount) AS tax_amount,SUM(o.tax_free_amount) AS tax_free_amount
        FROM base_execute_order AS o
        WHERE o.del_flag = 0 AND o.item_status = 0
        AND o.order_date <![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR}) AND o.order_date <![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
        AND  o.status = 3
        GROUP BY o.order_date
--         ORDER BY  o.tax_amount ASC
    </select>
    <select id="querySaleHistoryByDateMonth" resultMap="BaseResultMap">
        SELECT
        date_format(o.order_date,'%Y-%m') AS order_date,
        COUNT(o.order_num) AS order_num,SUM(o.tax_amount) AS tax_amount,
        SUM(o.tax_free_amount) AS tax_free_amount
        FROM base_execute_order AS o
        WHERE o.del_flag = 0 AND o.item_status = 0
        AND o.order_date <![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR}) AND o.order_date <![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
        AND  o.status = 3
        GROUP BY date_format(o.order_date,'%Y-%m')
--         ORDER BY  SUM(o.tax_amount) ASC
    </select>
    <select id="querySaleHistoryByDateQuarter" resultMap="BaseResultMap">
        SELECT
        CONCAT(YEAR(o.order_date),'年',quarter(o.order_date),'季度') AS order_date,SUM(o.tax_amount) AS tax_amount,SUM(o.tax_free_amount) AS tax_free_amount
        FROM base_execute_order AS o
        WHERE o.del_flag = 0 AND o.item_status = 0
        AND o.order_date <![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR}) AND o.order_date <![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
        AND  o.status = 3
        GROUP BY CONCAT(YEAR(o.order_date),'年',quarter(o.order_date),'季度')
--         ORDER BY  SUM(o.tax_amount) ASC
    </select>
    <select id="querySaleHistoryByDateHalfYear" resultMap="BaseResultMap">
        SELECT
        case when month(o.order_date)<![CDATA[ < ]]>6 then CONCAT(year(o.order_date),'上半年')
        when month(o.order_date)>=6 then CONCAT(year(o.order_date),'下半年')
        else null
        end  AS order_date,
        SUM(o.tax_amount) AS tax_amount,SUM(o.tax_free_amount) AS tax_free_amount
        FROM base_execute_order AS o
        WHERE o.del_flag = 0 AND o.item_status = 0
        AND o.order_date <![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR}) AND o.order_date <![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
        AND  o.status = 3
        GROUP BY
        case when month(o.order_date)<![CDATA[ < ]]>6 then CONCAT(year(o.order_date),'上半年')
        when month(o.order_date)>=6 then CONCAT(year(o.order_date),'下半年')
        else null
        end
--         ORDER BY  SUM(o.tax_amount) ASC
    </select>
    <select id="querySaleHistoryByDateWholeYear" resultMap="BaseResultMap">
        SELECT
        year(o.order_date) AS order_date,COUNT(o.order_num) AS order_num,SUM(o.tax_amount) AS tax_amount,SUM(o.tax_free_amount) AS tax_free_amount
        FROM base_execute_order AS o
        WHERE o.del_flag = 0 AND o.item_status = 0
        AND o.order_date <![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR}) AND o.order_date <![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
        AND  o.status = 3
        GROUP BY year(o.order_date)
--         ORDER BY  SUM(o.tax_amount) ASC
    </select>



    <select id="querySaleHistoryByArea" resultMap="BaseResultMap">
        SELECT
        b.name AS name,count(o.order_num) AS order_num,sum(o.tax_amount) AS tax_amount,sum(o.tax_free_amount) AS tax_free_amount
        FROM base_execute_order o
        LEFT JOIN base_area b
        ON   o.area_id=b.id
        WHERE o.del_flag = 0 AND o.item_status = 0 AND o.status = 3
        GROUP BY  b.name
        ORDER BY SUM(o.tax_amount) ASC
    </select>
    <select id="querySaleHistoryBySaler" resultMap="BaseResultMap">
        SELECT
        t2.name AS name,count(t1.order_num) AS order_num,sum(t1.tax_amount) AS tax_amount,sum(t1.tax_free_amount) AS tax_free_amount
        FROM base_execute_order t1
        LEFT JOIN   base_person t2
        ON   t1.person_sales_id=t2.id
        WHERE  t1.del_flag = 0 AND t1.item_status = 0
        AND t1.order_date <![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR})
        AND   t1.order_date <![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
        AND   t1.status = 3
        GROUP BY  t2.name
        ORDER BY sum(t1.tax_amount) ASC
    </select>

<select id="querySaleHistoryBySalerTOP3" resultMap="BaseResultMap">
        SELECT 
        t2.name AS name,
		  count(t1.order_num) AS order_num,
		  sum(t1.tax_amount) AS tax_amount,
		  sum(t1.tax_free_amount) AS tax_free_amount
    FROM base_execute_order t1
    LEFT JOIN   base_person t2
      ON   t1.person_sales_id=t2.id
    WHERE  t1.del_flag = 0 
	        AND t1.item_status = 0 
           AND t1.status = 3
           AND t1.order_date<![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR})
           AND t1.order_date<![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
    GROUP BY  t2.name
	 ORDER BY sum(t1.tax_amount) DESC
	 limit 0,3
    </select>

    <select id="querySaleHistoryBySalerMonth" resultMap="BaseResultMap">
        SELECT
        t2.name AS name,date_format(t1.order_date,'%Y-%m') as order_date,  count(t1.order_num) AS order_num,sum(t1.tax_amount) AS tax_amount,sum(t1.tax_free_amount) AS tax_free_amount
        FROM base_execute_order t1
        LEFT JOIN   base_person t2
        ON   t1.person_sales_id=t2.id
        WHERE  t1.del_flag = 0 AND t1.item_status = 0
        AND t1.order_date <![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR})
        AND   t1.order_date <![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
        AND   t1.status = 3
        GROUP BY t2.name,date_format(t1.order_date,'%Y-%m')
        ORDER BY order_date ASC
    </select>
    <select id="querySaleHistoryBySalerQuarter" resultMap="BaseResultMap">
        SELECT
        t2.name AS name, CONCAT(YEAR(t1.order_date),'年',quarter(t1.order_date),'季度')  as order_date,  count(t1.order_num) AS order_num,sum(t1.tax_amount) AS tax_amount,sum(t1.tax_free_amount) AS tax_free_amount
        FROM base_execute_order t1
        LEFT JOIN   base_person t2
        ON   t1.person_sales_id=t2.id
        WHERE  t1.del_flag = 0 AND t1.item_status = 0
        AND t1.order_date <![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR})
        AND   t1.order_date <![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
        AND   t1.status = 3
        GROUP BY  t2.name, CONCAT(YEAR(t1.order_date),'年',quarter(t1.order_date),'季度')
        ORDER BY order_date ASC
    </select>
    <select id="querySaleHistoryBySalerWholeYear" resultMap="BaseResultMap">
        SELECT
        t2.name AS name,year(t1.order_date) as order_date,  count(t1.order_num) AS order_num,sum(t1.tax_amount) AS tax_amount,sum(t1.tax_free_amount) AS tax_free_amount
        FROM base_execute_order t1
        LEFT JOIN   base_person t2
        ON   t1.person_sales_id=t2.id
        WHERE  t1.del_flag = 0 AND t1.item_status = 0
        AND t1.order_date <![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR})
        AND   t1.order_date <![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
        AND   t1.status = 3
        GROUP BY t2.name,year(t1.order_date)
        ORDER BY order_date ASC
    </select>
    <select id="querySaleHistoryByCustomType" resultMap="BaseResultMap">
        SELECT
        t2.name AS name, t2.custom_type AS custom_type,count(order_num) AS order_num,sum(tax_amount) AS tax_amount,sum(tax_free_amount) AS  tax_free_amount
        FROM base_execute_order t1
        LEFT JOIN  base_custom t2
        ON   t1.custom_sign_id=t2.id
        WHERE  t1.del_flag = 0 AND t1.item_status = 0
        AND t1.order_date <![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR})
        AND   t1.order_date <![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
        AND  T1.status = 3
        AND  t2.custom_type = #{customType,jdbcType=VARCHAR}
        GROUP BY  t1.custom_sign_id
        ORDER BY sum(tax_amount)  ASC
    </select>


    <select id="querySaleFeature" resultMap="BaseResultMap">
        SELECT
        B.name AS name, date_format(o.order_date,'%Y-%m') AS order_date,COUNT(o.order_num) AS order_num,SUM(o.tax_amount) AS tax_amount,SUM(o.tax_free_amount) AS tax_free_amount
        FROM base_execute_order AS o
        LEFT JOIN base_area B
        ON o.area_id=B.id
        WHERE o.del_flag = 0 AND o.item_status = 0
        AND o.order_date <![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR}) AND o.order_date <![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
        AND o.status > 0 AND  o.status <![CDATA[ < ]]> 3
        <choose>
            <when test="queryType == 0">
                GROUP BY B.name
            </when>
            <otherwise>
                GROUP BY date_format(o.order_date,'%Y-%m')
            </otherwise>
        </choose>
        ORDER BY SUM(o.tax_amount) ASC
    </select>


    <!-- 2.	资源采购分析系统 -->
        <select id="queryBuyResourceByDateLineMonth" resultMap="BaseResultMap">
SELECT date_format(t2.order_date,'%Y-%m') AS order_date,mt.name AS type,sum(t1.cpm) AS cpm_total
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR})  AND t2.order_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY mt.name ,date_format(t2.order_date,'%Y-%m')
ORDER BY  cpm_total DESC

    </select>
    
    <select id="queryBuyResourceNamesLineMonth" resultType="string">
SELECT mt.name AS type
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR})  AND t2.order_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY mt.name 
ORDER BY  sum(t1.cpm) DESC

    </select>
    
    <select id="queryBuyResourceTimesLineMonth" resultType="string">
SELECT date_format(t2.order_date,'%Y-%m') AS order_date 
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR})  AND t2.order_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY date_format(t2.order_date,'%Y-%m')
ORDER BY  sum(t1.cpm) DESC

    </select>
    
    <select id="queryBuyResourceByDateLineQuarter" resultMap="BaseResultMap">
SELECT  CONCAT(YEAR(t2.order_date),'年',quarter(t2.order_date),'季度') AS order_date,mt.name AS type,sum(t1.cpm) AS cpm_total
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date<![CDATA[ >= ]]>date (#{startDate,jdbcType=VARCHAR}) AND t2.order_date<![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY mt.name , CONCAT(YEAR(t2.order_date),'年',quarter(t2.order_date),'季度')
ORDER BY  cpm_total DESC
    </select>
    
        <select id="queryBuyResourceNamesLineQuarter" resultType="string">
SELECT  mt.name AS type
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date<![CDATA[ >= ]]>date (#{startDate,jdbcType=VARCHAR}) AND t2.order_date<![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY mt.name 
ORDER BY  sum(t1.cpm) DESC
    </select>
    
        <select id="queryBuyResourceTimesLineQuarter" resultType="string">
SELECT  CONCAT(YEAR(t2.order_date),'年',quarter(t2.order_date),'季度') AS order_date 
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date<![CDATA[ >= ]]>date (#{startDate,jdbcType=VARCHAR}) AND t2.order_date<![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY  CONCAT(YEAR(t2.order_date),'年',quarter(t2.order_date),'季度')
ORDER BY  sum(t1.cpm) DESC
    </select>
    
    <select id="queryBuyResourceByDateLineHalfYear" resultMap="BaseResultMap">
SELECT  case when month(t2.order_date)<![CDATA[ < ]]>6 then CONCAT(year(t2.order_date),'上半年')
when month(t2.order_date)<![CDATA[ >= ]]>6 then CONCAT(year(t2.order_date),'下半年')
else null
end  AS order_date,mt.name AS type,sum(t1.cpm) AS cpm_total,SUM(media_price*cpm) AS sale_amount,SUM(first_price*cpm) AS buy_amount
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date<![CDATA[ >= ]]>date (#{startDate,jdbcType=VARCHAR}) AND t2.order_date<![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY mt.name , case when month(t2.order_date)<![CDATA[ < ]]>6 then CONCAT(year(t2.order_date),'上半年')
when month(t2.order_date)<![CDATA[ >= ]]>6 then CONCAT(year(t2.order_date),'下半年')
else null
end
ORDER BY  cpm_total DESC
    </select>
    
        <select id="queryBuyResourceNamesLineHalfYear" resultType="string">
SELECT  mt.name AS type
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date<![CDATA[ >= ]]>date (#{startDate,jdbcType=VARCHAR}) AND t2.order_date<![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY mt.name 
ORDER BY  sum(t1.cpm) DESC
    </select>
    
        <select id="queryBuyResourceTimesLineHalfYear" resultType="string">
SELECT  case when month(t2.order_date)<![CDATA[ < ]]>6 then CONCAT(year(t2.order_date),'上半年')
when month(t2.order_date)<![CDATA[ >= ]]>6 then CONCAT(year(t2.order_date),'下半年')
else null
end  AS order_date
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date<![CDATA[ >= ]]>date (#{startDate,jdbcType=VARCHAR}) AND t2.order_date<![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY  case when month(t2.order_date)<![CDATA[ < ]]>6 then CONCAT(year(t2.order_date),'上半年')
when month(t2.order_date)<![CDATA[ >= ]]>6 then CONCAT(year(t2.order_date),'下半年')
else null
end
ORDER BY  sum(t1.cpm) DESC
    </select>
    
    <select id="queryBuyResourceByDateLineWholeYear" resultMap="BaseResultMap">
SELECT year(t2.order_date) AS order_date,mt.name AS type,sum(t1.cpm) AS cpm_total,SUM(media_price*cpm) AS sale_amount,SUM(first_price*cpm) AS buy_amount
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date<![CDATA[ >= ]]>date (#{startDate,jdbcType=VARCHAR}) AND t2.order_date<![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY mt.name ,year(t2.order_date)
ORDER BY  cpm_total DESC
    </select>
    
        <select id="queryBuyResourceNamesLineWholeYear" resultType="string">
SELECT mt.name AS type
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date<![CDATA[ >= ]]>date (#{startDate,jdbcType=VARCHAR}) AND t2.order_date<![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY mt.name 
ORDER BY  sum(t1.cpm) DESC
    </select>
    
        <select id="queryBuyResourceTimesLineWholeYear" resultType="string">
SELECT year(t2.order_date) AS order_date 
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date<![CDATA[ >= ]]>date (#{startDate,jdbcType=VARCHAR}) AND t2.order_date<![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY year(t2.order_date)
ORDER BY  sum(t1.cpm) DESC
    </select>
    
    <select id="queryBuyResourceByDateMonth" resultMap="BaseResultMap">

SELECT date_format(t2.order_date,'%Y-%m') AS order_date,mt.name AS type,SUM(first_price*cpm) AS buy_amount
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date <![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR}) AND t2.order_date <![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY mt.name ,date_format(t2.order_date,'%Y-%m')
ORDER BY  buy_amount DESC
    </select>
    
    <select id="queryBuyResourceNamesMonth" resultType="string">

SELECT mt.name AS type
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date <![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR}) AND t2.order_date <![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY mt.name 
ORDER BY SUM(first_price*cpm) DESC
    </select>
    
    <select id="queryBuyResourceTimesMonth" resultType="string">

SELECT date_format(t2.order_date,'%Y-%m') AS order_date 
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date <![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR}) AND t2.order_date <![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY date_format(t2.order_date,'%Y-%m')
ORDER BY  SUM(first_price*cpm) DESC
    </select>
    
    <select id="queryBuyResourceByDateQuarter" resultMap="BaseResultMap">

SELECT  CONCAT(YEAR(t2.order_date),'年',quarter(t2.order_date),'季度') AS order_date,mt.name AS type,SUM(first_price*cpm) AS buy_amount
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date <![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR}) AND t2.order_date <![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY mt.name , CONCAT(YEAR(t2.order_date),'年',quarter(t2.order_date),'季度')
ORDER BY  SUM(first_price*cpm) DESC
    </select>
    
        <select id="queryBuyResourceNamesQuarter" resultType="string">

SELECT  mt.name AS type 
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date <![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR}) AND t2.order_date <![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY mt.name  
ORDER BY  SUM(first_price*cpm) DESC
    </select>
    
        <select id="queryBuyResourceTimesQuarter" resultType="string">

SELECT  CONCAT(YEAR(t2.order_date),'年',quarter(t2.order_date),'季度') AS order_date 
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date <![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR}) AND t2.order_date <![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY CONCAT(YEAR(t2.order_date),'年',quarter(t2.order_date),'季度')
ORDER BY  SUM(first_price*cpm) DESC
    </select>
    
    <select id="queryBuyResourceByDateHalfYear" resultMap="BaseResultMap">

SELECT  case when month(t2.order_date) <![CDATA[ < ]]>6 then CONCAT(year(t2.order_date),'上半年')
when month(t2.order_date) <![CDATA[ >= ]]>6 then CONCAT(year(t2.order_date),'下半年')
else null
end  AS order_date,mt.name AS type,sum(t1.cpm) AS cpm_total,SUM(media_price*cpm) AS sale_amount,SUM(first_price*cpm) AS buy_amount
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date <![CDATA[ >= ]]>date (#{startDate,jdbcType=VARCHAR}) AND t2.order_date <![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY mt.name , case when month(t2.order_date) <![CDATA[ < ]]>6 then CONCAT(year(t2.order_date),'上半年')
when month(t2.order_date) <![CDATA[ >= ]]>6 then CONCAT(year(t2.order_date),'下半年')
else null
end
ORDER BY  sum(t1.cpm) DESC
    </select>
    
        <select id="queryBuyResourceNamesHalfYear" resultType="string">

SELECT  mt.name AS type 
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date <![CDATA[ >= ]]>date (#{startDate,jdbcType=VARCHAR}) AND t2.order_date <![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY mt.name 
ORDER BY  sum(t1.cpm) DESC
    </select>
    
        <select id="queryBuyResourceTimesHalfYear" resultType="string">

SELECT  case when month(t2.order_date) <![CDATA[ < ]]>6 then CONCAT(year(t2.order_date),'上半年')
when month(t2.order_date) <![CDATA[ >= ]]>6 then CONCAT(year(t2.order_date),'下半年')
else null
end  AS order_date 
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date <![CDATA[ >= ]]>date (#{startDate,jdbcType=VARCHAR}) AND t2.order_date <![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY  case when month(t2.order_date) <![CDATA[ < ]]>6 then CONCAT(year(t2.order_date),'上半年')
when month(t2.order_date) <![CDATA[ >= ]]>6 then CONCAT(year(t2.order_date),'下半年')
else null
end
ORDER BY  sum(t1.cpm) DESC
    </select>
    
    <select id="queryBuyResourceByDateWholeYear" resultMap="BaseResultMap">
SELECT year(t2.order_date) AS order_date,mt.name AS type,sum(t1.cpm) AS cpm_total,SUM(media_price*cpm) AS sale_amount,SUM(first_price*cpm) AS buy_amount
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date <![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR}) AND t2.order_date <![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY mt.name ,year(t2.order_date)
ORDER BY  sum(t1.cpm) DESC
    </select>

<select id="queryBuyResourceNamesWholeYear" resultType="string">
SELECT  mt.name AS type 
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date <![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR}) AND t2.order_date <![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY mt.name 
ORDER BY  sum(t1.cpm) DESC
    </select>
    
    <select id="queryBuyResourceTimesWholeYear" resultType="string">
SELECT year(t2.order_date) AS order_date 
FROM base_order_cpm t1
INNER JOIN  base_buy_order t2
ON  t1.order_id =t2.id
LEFT JOIN base_media AS m
ON t1.media_id = m.id
LEFT JOIN base_media_type AS mt
ON m.type = mt.id
WHERE t1.order_cpm_type = 6 AND t2.order_date <![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR}) AND t2.order_date <![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR}) and  t2.del_flag = 0 AND t2.item_status = 0
GROUP BY year(t2.order_date)
ORDER BY  sum(t1.cpm) DESC
    </select>


    <select id="queryBuyArea" resultMap="BaseResultMap">
        SELECT m.name AS name,sum(t1.cpm) AS cpm_total,SUM(media_price*cpm) AS sale_amount,SUM(first_price*cpm) AS buy_amount
        FROM base_order_cpm t1
        INNER JOIN  base_buy_order t2
        ON  t1.order_id =t2.id
        LEFT JOIN base_media m
        ON  t1.media_id=m.id
        WHERE t1.order_cpm_type = 6 AND t2.order_date <![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR}) AND t2.order_date <![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
         AND t1.del_flag = 0 AND t1.item_status = 0 AND t2.status = 1
        GROUP BY m.name
        ORDER BY #{orderKey} DESC;
    </select>


    <!-- 3.	分公司财务分析系统 -->
    <select id="queryAreaBudgetByDateHalfYear" resultMap="BaseResultMap">
	SELECT 
        case when month(o.order_date)<![CDATA[ < ]]>6 then CONCAT(year(o.order_date),'上半年') 
            when month(o.order_date)<![CDATA[ >= ]]>6 then CONCAT(year(o.order_date),'下半年')
		    else null
		    end  AS order_num ,
        b.name AS name,count(o.order_num)/SUM(F.pay1)*100  as yswc
   FROM base_execute_order o
   LEFT JOIN base_area_finance F
   ON  o.area_id=F.area_id
   LEFT JOIN base_area b
        ON   o.area_id=b.id
   WHERE o.del_flag = 0 AND o.item_status = 0 AND o.status in (2,3) and f.del_flag = 0 AND f.item_status = 0
         and o.order_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR}) AND o.order_date<![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR})
   GROUP BY  b.name,
            (case when month(o.order_date)<![CDATA[ < ]]>6 then CONCAT(year(o.order_date),'上半年') 
             when month(o.order_date)<![CDATA[ >= ]]>6 then CONCAT(year(o.order_date),'下半年')
		         else null
		         end)
    </select>
    
    <select id="queryAreaBudgetNamesHalfYear" resultType="string">
	SELECT 
        b.name AS name
   FROM base_execute_order o
   LEFT JOIN base_area_finance F
   ON  o.area_id=F.area_id
   LEFT JOIN base_area b
        ON   o.area_id=b.id
   WHERE o.del_flag = 0 AND o.item_status = 0 AND o.status in (2,3) and f.del_flag = 0 AND f.item_status = 0
         and o.order_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR}) AND o.order_date<![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR})
   GROUP BY  b.name
    </select>
    
    <select id="queryAreaBudgetTimesHalfYear" resultType="string">
	SELECT 
        case when month(o.order_date)<![CDATA[ < ]]>6 then CONCAT(year(o.order_date),'上半年') 
            when month(o.order_date)<![CDATA[ >= ]]>6 then CONCAT(year(o.order_date),'下半年')
		    else null
		    end  AS order_num 
   FROM base_execute_order o
   LEFT JOIN base_area_finance F
   ON  o.area_id=F.area_id
   LEFT JOIN base_area b
        ON   o.area_id=b.id
   WHERE o.del_flag = 0 AND o.item_status = 0 AND o.status in (2,3) and f.del_flag = 0 AND f.item_status = 0
         and o.order_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR}) AND o.order_date<![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR})
   GROUP BY  
            (case when month(o.order_date)<![CDATA[ < ]]>6 then CONCAT(year(o.order_date),'上半年') 
             when month(o.order_date)<![CDATA[ >= ]]>6 then CONCAT(year(o.order_date),'下半年')
		         else null
		         end)
    </select>
    
    <select id="queryAreaBudgetByDateWholeYear1" resultMap="BaseResultMap">
       select order_num,
      max( case when  name='北京公司' then yswc else 0  end )as 北京公司,
      max( case when  name='广东公司' then yswc else 0  end )as 广东公司,
      max( case when  name='石家庄' then yswc else  0 end) as 石家庄
from (
	SELECT 
        year(o.order_date) AS order_num ,b.name AS name,count(o.order_num)/SUM(F.pay1)*100 as yswc
   FROM base_execute_order o
   LEFT JOIN base_area_finance F
   ON  o.area_id=F.area_id
   LEFT JOIN base_area b
        ON   o.area_id=b.id
   WHERE o.del_flag = 0 AND o.item_status = 0 AND o.status in (2,3) and f.del_flag = 0 AND f.item_status = 0
    and o.order_date <![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR}) AND o.order_date <![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
   GROUP BY  b.name,year(o.order_date) 
   
   ) t
   group by order_num
    </select>
    
    <select id="queryAreaBudgetByDateWholeYear" resultMap="BaseResultMap">
	SELECT 
        year(o.order_date) AS order_num ,b.name AS name,count(o.order_num)/SUM(F.pay1)*100 as yswc
   FROM base_execute_order o
   LEFT JOIN base_area_finance F
   ON  o.area_id=F.area_id
   LEFT JOIN base_area b
        ON   o.area_id=b.id
   WHERE o.del_flag = 0 AND o.item_status = 0 AND o.status in (2,3) and f.del_flag = 0 AND f.item_status = 0
    and o.order_date <![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR}) AND o.order_date <![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
   GROUP BY  b.name,year(o.order_date) 

    </select>
    <select id="queryAreaBudgetNamesWholeYear" resultType="string">
	SELECT 
        b.name AS name
   FROM base_execute_order o
   LEFT JOIN base_area_finance F
   ON  o.area_id=F.area_id
   LEFT JOIN base_area b
        ON   o.area_id=b.id
   WHERE o.del_flag = 0 AND o.item_status = 0 AND o.status in (2,3) and f.del_flag = 0 AND f.item_status = 0
    and o.order_date <![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR}) AND o.order_date <![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
   GROUP BY  b.name

    </select>
    <select id="queryAreaBudgetTimesWholeYear"  resultType="string">
	SELECT 
        year(o.order_date) AS order_num 
   FROM base_execute_order o
   LEFT JOIN base_area_finance F
   ON  o.area_id=F.area_id
   LEFT JOIN base_area b
        ON   o.area_id=b.id
   WHERE o.del_flag = 0 AND o.item_status = 0 AND o.status in (2,3) and f.del_flag = 0 AND f.item_status = 0
    and o.order_date <![CDATA[ >= ]]> date(#{startDate,jdbcType=VARCHAR}) AND o.order_date <![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
   GROUP BY  year(o.order_date) 

    </select>
    
    
	<select id="queryAreaBudgetByDateQuarterYear" resultMap="BaseResultMap">

	SELECT 
         CONCAT(YEAR(o.order_date),'年',quarter(o.order_date),'季度')  AS order_num ,
        b.name AS name,count(o.order_num)/SUM(F.pay1)*100  as yswc
   FROM base_execute_order o
   LEFT JOIN base_area_finance F
   ON  o.area_id=F.area_id
   LEFT JOIN base_area b
        ON   o.area_id=b.id
   WHERE o.del_flag = 0 AND o.item_status = 0 AND o.status in (2,3) and f.del_flag = 0 AND f.item_status = 0
         and o.order_date<![CDATA[ >= ]]>date (#{startDate,jdbcType=VARCHAR})  AND o.order_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR})  
   GROUP BY  b.name, CONCAT(YEAR(o.order_date),'年',quarter(o.order_date),'季度')
    </select>

<select id="queryAreaBudgetNamesQuarterYear" resultType="string">

	SELECT 
        b.name AS name 
   FROM base_execute_order o
   LEFT JOIN base_area_finance F
   ON  o.area_id=F.area_id
   LEFT JOIN base_area b
        ON   o.area_id=b.id
   WHERE o.del_flag = 0 AND o.item_status = 0 AND o.status in (2,3) and f.del_flag = 0 AND f.item_status = 0
         and o.order_date<![CDATA[ >= ]]>date (#{startDate,jdbcType=VARCHAR})  AND o.order_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR})  
   GROUP BY  b.name
    </select>
    
    <select id="queryAreaBudgetTimesQuarterYear" resultType="string">

	SELECT 
         CONCAT(YEAR(o.order_date),'年',quarter(o.order_date),'季度')  AS order_num 
   FROM base_execute_order o
   LEFT JOIN base_area_finance F
   ON  o.area_id=F.area_id
   LEFT JOIN base_area b
        ON   o.area_id=b.id
   WHERE o.del_flag = 0 AND o.item_status = 0 AND o.status in (2,3) and f.del_flag = 0 AND f.item_status = 0
         and o.order_date<![CDATA[ >= ]]>date (#{startDate,jdbcType=VARCHAR})  AND o.order_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR})  
   GROUP BY  CONCAT(YEAR(o.order_date),'年',quarter(o.order_date),'季度')
    </select>




    <!-- 4.	客户分析系统 -->
    <select id="queryCustomerByProfitNoDate" resultMap="BaseResultMap">
        SELECT t1.custom_id AS custom_id ,
        t2.name AS name,
        case when  t2.custom_type='1' then '4A公司'
        when  t2.custom_type='2' then '直客'
        when  t2.custom_type='3' then '广告主（下拉）'
        else t2.custom_type  end AS custom_type,
        SUM(t1.income-t1.cost_buy-t1.room_pay-t1.person_pay-t1.tax-t1.sales_commission-other_pay) AS J_PAY,
        SUM(income-cost_buy) AS M_PAY
        FROM base_custom_finance t1
        INNER JOIN base_custom t2
        ON  t1.custom_id=t2.id
        WHERE t2.custom_type = #{customerType,jdbcType=VARCHAR} AND t1.del_flag = 0 AND t1.item_status = 0
        AND t1.start_date>=date(#{startDate,jdbcType=VARCHAR})
        AND t1.end_date<![CDATA[ <= ]]> date(#{endDate,jdbcType=VARCHAR})
        GROUP BY t1.custom_id
        ORDER BY J_PAY DESC;
    </select>
    
    
    <select id="queryCustomerByProfitDateMonth" resultMap="BaseResultMap">
        SELECT date_format(t1.start_date,'%Y-%m')  start_date,
t1.custom_id AS custom_id ,
t2.name AS name,
t2.custom_type 	AS custom_type,
SUM(t1.income-t1.cost_buy-t1.room_pay-t1.person_pay-t1.tax-t1.sales_commission-other_pay) AS J_PAY,
SUM(t1.income-t1.cost_buy) AS M_PAY
FROM base_custom_finance t1
INNER JOIN base_custom t2
ON  t1.custom_id=t2.id
WHERE t2.custom_type =#{customerType,jdbcType=TINYINT} AND t1.del_flag = 0 AND t1.item_status = 0 AND t1.start_date<![CDATA[ >= ]]>date (#{startDate,jdbcType=VARCHAR})
AND t1.end_date<![CDATA[ <= ]]>date (#{endDate,jdbcType=VARCHAR})
GROUP BY t1.custom_id ,date_format(t1.start_date,'%Y-%m')
    </select>
    
    
    <select id="queryCustomerNamesMonth" resultType="string">
        SELECT 
t2.name AS name
FROM base_custom_finance t1
INNER JOIN base_custom t2
ON  t1.custom_id=t2.id
WHERE t2.custom_type =#{customerType,jdbcType=TINYINT} AND t1.del_flag = 0 AND t1.item_status = 0 AND t1.start_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR})
AND t1.end_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR})
GROUP BY t2.name
    </select>
    
        <select id="queryCustomerTimesMonth" resultType="string">
        SELECT date_format(t1.start_date,'%Y-%m')  start_date 
FROM base_custom_finance t1
INNER JOIN base_custom t2
ON  t1.custom_id=t2.id
WHERE t2.custom_type =#{customerType,jdbcType=TINYINT} AND t1.del_flag = 0 AND t1.item_status = 0 AND t1.start_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR})
AND t1.end_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR})
GROUP BY date_format(t1.start_date,'%Y-%m')
    </select>
    
    <select id="queryCustomerByProfitDateQuarter" resultMap="BaseResultMap">
SELECT CONCAT(YEAR(t1.start_date),'年',quarter(t1.start_date),'季度')    start_date,
t1.custom_id AS custom_id ,
t2.name AS name,
t2.custom_type 	AS custom_type,
SUM(t1.income-t1.cost_buy-t1.room_pay-t1.person_pay-t1.tax-t1.sales_commission-other_pay) AS J_PAY,
SUM(t1.income-t1.cost_buy) AS M_PAY
FROM base_custom_finance t1
INNER JOIN base_custom t2
ON  t1.custom_id=t2.id
WHERE t2.custom_type =#{customerType,jdbcType=TINYINT} AND t1.del_flag = 0 AND t1.item_status = 0 AND t1.start_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR})
AND t1.end_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR})
GROUP BY t1.custom_id ,CONCAT(YEAR(t1.start_date),'年',quarter(t1.start_date),'季度')
    </select>
    
    <select id="queryCustomerNamesQuarter" resultType="string">
SELECT  
t2.name AS name 
FROM base_custom_finance t1
INNER JOIN base_custom t2
ON  t1.custom_id=t2.id
WHERE t2.custom_type =#{customerType,jdbcType=TINYINT} AND t1.del_flag = 0 AND t1.item_status = 0 AND t1.start_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR})
AND t1.end_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR})
GROUP BY t2.name
    </select>
    
    <select id="queryCustomerTimesQuarter" resultType="string">
SELECT CONCAT(YEAR(t1.start_date),'年',quarter(t1.start_date),'季度')    start_date 
FROM base_custom_finance t1
INNER JOIN base_custom t2
ON  t1.custom_id=t2.id
WHERE t2.custom_type =#{customerType,jdbcType=TINYINT} AND t1.del_flag = 0 AND t1.item_status = 0 AND t1.start_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR})
AND t1.end_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR})
GROUP BY CONCAT(YEAR(t1.start_date),'年',quarter(t1.start_date),'季度')
    </select>
    
    <select id="queryCustomerByProfitDateHalfYear" resultMap="BaseResultMap">
        SELECT case when month(t1.start_date)<![CDATA[ < ]]>6 then CONCAT(year(t1.start_date),'上半年')
when month(t1.start_date)<![CDATA[ >= ]]>6 then CONCAT(year(t1.start_date),'下半年')
else null
end as start_date,
t1.custom_id AS custom_id ,
t2.name AS name,
t2.custom_type 	AS custom_type,
SUM(t1.income-t1.cost_buy-t1.room_pay-t1.person_pay-t1.tax-t1.sales_commission-other_pay) AS J_PAY,
SUM(t1.income-t1.cost_buy) AS M_PAY
FROM base_custom_finance t1
INNER JOIN base_custom t2
ON  t1.custom_id=t2.id
WHERE t2.custom_type=#{customerType,jdbcType=TINYINT} AND t1.del_flag = 0 AND t1.item_status = 0 AND t1.start_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR})
AND t1.end_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR})
GROUP BY t1.custom_id ,
case when month(t1.start_date)<![CDATA[ < ]]>6 then CONCAT(year(t1.start_date),'上半年')
when month(t1.start_date)<![CDATA[ >= ]]>6 then CONCAT(year(t1.start_date),'下半年')
else null
end
    </select>
    
    
     <select id="queryCustomerNamesHalfYear" resultType="string">
        SELECT  
t2.name AS name 
FROM base_custom_finance t1
INNER JOIN base_custom t2
ON  t1.custom_id=t2.id
WHERE t2.custom_type=#{customerType,jdbcType=TINYINT} AND t1.del_flag = 0 AND t1.item_status = 0 AND t1.start_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR})
AND t1.end_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR})
GROUP BY t2.name
    </select>
    
     <select id="queryCustomerTimesHalfYear" resultType="string">
        SELECT case when month(t1.start_date)<![CDATA[ < ]]>6 then CONCAT(year(t1.start_date),'上半年')
when month(t1.start_date)<![CDATA[ >= ]]>6 then CONCAT(year(t1.start_date),'下半年')
else null
end as start_date 
FROM base_custom_finance t1
INNER JOIN base_custom t2
ON  t1.custom_id=t2.id
WHERE t2.custom_type=#{customerType,jdbcType=TINYINT} AND t1.del_flag = 0 AND t1.item_status = 0 AND t1.start_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR})
AND t1.end_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR})
GROUP BY  case when month(t1.start_date)<![CDATA[ < ]]>6 then CONCAT(year(t1.start_date),'上半年')
when month(t1.start_date)<![CDATA[ >= ]]>6 then CONCAT(year(t1.start_date),'下半年')
else null
end
    </select>
    
    <select id="queryCustomerByProfitDateWholeYear" resultMap="BaseResultMap">
       SELECT year(t1.start_date) as start_date,
t1.custom_id AS custom_id ,
t2.name AS name,
t2.custom_type 	AS custom_type,
SUM(t1.income-t1.cost_buy-t1.room_pay-t1.person_pay-t1.tax-t1.sales_commission-other_pay) AS J_PAY,
SUM(t1.income-t1.cost_buy) AS M_PAY
FROM base_custom_finance t1
INNER JOIN base_custom t2
ON  t1.custom_id=t2.id
WHERE t2.custom_type =#{customerType,jdbcType=TINYINT} AND t1.del_flag = 0 AND t1.item_status = 0 AND t1.start_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR})
AND t1.end_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR})
GROUP BY t1.custom_id ,
         year(t1.start_date)
    </select>
    
    <select id="queryCustomerNamesWholeYear" resultType="string">
       SELECT 
t2.name AS name 
FROM base_custom_finance t1
INNER JOIN base_custom t2
ON  t1.custom_id=t2.id
WHERE t2.custom_type =#{customerType,jdbcType=TINYINT} AND t1.del_flag = 0 AND t1.item_status = 0 AND t1.start_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR})
AND t1.end_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR})
GROUP BY t2.name
    </select>
    
    <select id="queryCustomerTimesWholeYear" resultType="string">
       SELECT year(t1.start_date) as start_date 
FROM base_custom_finance t1
INNER JOIN base_custom t2
ON  t1.custom_id=t2.id
WHERE t2.custom_type =#{customerType,jdbcType=TINYINT} AND t1.del_flag = 0 AND t1.item_status = 0 AND t1.start_date<![CDATA[ >= ]]>date(#{startDate,jdbcType=VARCHAR})
AND t1.end_date<![CDATA[ <= ]]>date(#{endDate,jdbcType=VARCHAR})
GROUP BY year(t1.start_date)
    </select>
    
    <select id="queryCustomerByPay" resultMap="BaseResultMap">
        SELECT t1.custom_id AS custom_id,t1.name AS name,t2.pay_percent AS pay_percent
        FROM  base_custom_finance t1
        LEFT JOIN base_execute_order_frame t2
        ON t1.custom_id=t2.custom_sign_id
        where  t1.del_flag = 0 AND t1.item_status = 0
    </select>

</mapper>